# -*- mode: python -*-

from build import build_lib
Import('env')

target = 'lagrangianSpray'

sources = Split("""
clouds/baseClasses/sprayCloud/sprayCloud.cpp
parcels/derived/basicSprayParcel/defineBasicSprayParcel.cpp
parcels/derived/basicSprayParcel/makeBasicSprayParcelSubmodels.cpp
""")

caelus_inc = [
'sampling/lnInclude',
'dynamicFvMesh/lnInclude',
'lagrangian/basic/lnInclude',
'lagrangian/distributionModels/lnInclude',
'lagrangian/intermediate/lnInclude',
'lagrangian/turbulence/lnInclude',
'turbulenceModels',
'turbulenceModels/incompressible/LES/lnInclude',
'turbulenceModels/LES/LESdeltas/lnInclude',
'transportModels',
'regionModels/regionModel/lnInclude',
'regionModels/surfaceFilmModels/lnInclude',
'thermophysicalModels/specie/lnInclude',
'thermophysicalModels/basic/lnInclude',
'thermophysicalModels/reactionThermo/lnInclude',
'thermophysicalModels/SLGThermo/lnInclude',
'thermophysicalModels/radiationModels/lnInclude',
'thermophysicalModels/thermophysicalProperties/lnInclude'
]

caelus_libs = [
'core',
'lagrangian',
'distributionModels',
'specie',
'fluidThermophysicalModels',
'thermophysicalProperties',
'reactionThermophysicalModels',
'SLGThermo',
'radiationModels',
'compressibleTurbulenceModel',
'incompressibleTurbulenceModel',
'incompressibleLESModels',
'compressibleRASModels',
'compressibleLESModels',
'LESdeltas',
'incompressibleTransportModels',
'regionModels',
'surfaceFilmModels',
'dynamicFvMesh',
'sampling',
'lagrangianIntermediate'
]

build_lib(env,
          target=target,
          sources=sources,
          caelus_inc=caelus_inc,
          caelus_libs=caelus_libs)
