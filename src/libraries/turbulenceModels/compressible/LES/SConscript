# -*- mode: python -*-

from build import build_lib
Import('env')

target = 'compressibleLESModels'

sources = Split("""
compressibleLESdelta/compressibleLESdelta.cpp
vanDriestDelta/compressiblevanDriestDelta.cpp
LESModel/compressibleLESModel.cpp
GenEddyVisc/compressibleGenEddyVisc.cpp
GenSGSStress/compressibleGenSGSStress.cpp
laminar/compressibleLESLaminar.cpp
coherentStructureModel/compressibleCoherentStructureModel.cpp
Smagorinsky/compressibleSmagorinsky.cpp
oneEqEddy/compressibleOneEqEddy.cpp
dynOneEqEddy/compressibleDynOneEqEddy.cpp
WALE/compressibleWALE.cpp
SpalartAllmarasDES/compressibleSpalartAllmarasDES.cpp
SpalartAllmarasDDES/compressibleSpalartAllmarasDDES.cpp
SpalartAllmarasIDDES/compressibleSpalartAllmarasIDDES.cpp
kOmegaSSTDES/compressiblekOmegaSSTDES.cpp
kOmegaSSTDDES/compressiblekOmegaSSTDDES.cpp
kOmegaSSTIDDES/compressiblekOmegaSSTIDDES.cpp
derivedFvPatchFields/wallFunctions/muSgsWFs/muSgsUSpaldingWF/muSgsUSpaldingWFFvPatchScalarField.cpp
derivedFvPatchFields/wallFunctions/alphaSgsWFs/alphaSgsWF/compAlphaSgsWFFvPatchScalarField.cpp
derivedFvPatchFields/wallFunctions/alphaSgsWFs/alphaSgsJayaWF/compAlphaSgsJayaWFFvPatchScalarField.cpp
""")

caelus_inc = [
'turbulenceModels',
'thermophysicalModels/basic/lnInclude',
'turbulenceModels/LES/LESdeltas/lnInclude',
'turbulenceModels/LES/LESfilters/lnInclude'
]

caelus_libs = [
'core',
'compressibleTurbulenceModel',
'LESfilters',
'LESdeltas'
]

build_lib(env,
          target=target,
          sources=sources,
          caelus_inc=caelus_inc,
          caelus_libs=caelus_libs)
