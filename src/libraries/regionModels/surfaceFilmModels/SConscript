# -*- mode: python -*-

from build import build_lib
Import('env')

target = 'surfaceFilmModels'

sources = Split("""
surfaceFilmModel/surfaceFilmModel.cpp
surfaceFilmModel/surfaceFilmModelNew.cpp
surfaceFilmRegionModel/surfaceFilmRegionModel.cpp
noFilm/noFilm.cpp
kinematicSingleLayer/kinematicSingleLayer.cpp
thermoSingleLayer/thermoSingleLayer.cpp
submodels/filmSubModelBase.cpp
submodels/kinematic/force/force/force.cpp
submodels/kinematic/force/force/forceNew.cpp
submodels/kinematic/force/forceList/forceList.cpp
submodels/kinematic/force/contactAngleForces/contactAngleForce/contactAngleForce.cpp
submodels/kinematic/force/contactAngleForces/distribution/distributionContactAngleForce.cpp
submodels/kinematic/force/contactAngleForces/temperatureDependent/temperatureDependentContactAngleForce.cpp
submodels/kinematic/force/contactAngleForces/perturbedTemperatureDependent/perturbedTemperatureDependentContactAngleForce.cpp
submodels/kinematic/force/thermocapillaryForce/thermocapillaryForce.cpp
submodels/kinematic/injectionModel/injectionModel/injectionModel.cpp
submodels/kinematic/injectionModel/injectionModel/injectionModelNew.cpp
submodels/kinematic/injectionModel/injectionModelList/injectionModelList.cpp
submodels/kinematic/injectionModel/drippingInjection/drippingInjection.cpp
submodels/kinematic/injectionModel/BrunDrippingInjection/BrunDrippingInjection.cpp
submodels/kinematic/injectionModel/patchInjection/patchInjection.cpp
submodels/kinematic/injectionModel/curvatureSeparation/curvatureSeparation.cpp
submodels/kinematic/transferModels/transferModel/transferModel.cpp
submodels/kinematic/transferModels/transferModel/transferModelNew.cpp
submodels/kinematic/transferModels/transferModelList/transferModelList.cpp
submodels/kinematic/filmThermoModel/filmThermoModel/filmThermoModel.cpp
submodels/kinematic/filmThermoModel/filmThermoModel/filmThermoModelNew.cpp
submodels/kinematic/filmThermoModel/constantFilmThermo/constantFilmThermo.cpp
submodels/kinematic/filmThermoModel/liquidFilmThermo/liquidFilmThermo.cpp
submodels/kinematic/filmTurbulenceModel/filmTurbulenceModel/filmTurbulenceModel.cpp
submodels/kinematic/filmTurbulenceModel/filmTurbulenceModel/filmTurbulenceModelNew.cpp
submodels/kinematic/filmTurbulenceModel/laminar/laminar.cpp
submodels/thermo/phaseChangeModel/phaseChangeModel/phaseChangeModel.cpp
submodels/thermo/phaseChangeModel/phaseChangeModel/phaseChangeModelNew.cpp
submodels/thermo/phaseChangeModel/noPhaseChange/noPhaseChange.cpp
submodels/thermo/phaseChangeModel/standardPhaseChange/standardPhaseChange.cpp
submodels/thermo/phaseChangeModel/solidification/solidification.cpp
submodels/thermo/phaseChangeModel/waxSolventEvaporation/waxSolventEvaporation.cpp
submodels/thermo/heatTransferModel/heatTransferModel/heatTransferModel.cpp
submodels/thermo/heatTransferModel/heatTransferModel/heatTransferModelNew.cpp
submodels/thermo/heatTransferModel/constantHeatTransfer/constantHeatTransfer.cpp
submodels/thermo/heatTransferModel/mappedConvectiveHeatTransfer/mappedConvectiveHeatTransfer.cpp
submodels/thermo/filmRadiationModel/filmRadiationModel/filmRadiationModel.cpp
submodels/thermo/filmRadiationModel/filmRadiationModel/filmRadiationModelNew.cpp
submodels/thermo/filmRadiationModel/noFilmRadiation/noFilmRadiation.cpp
submodels/thermo/filmRadiationModel/standardRadiation/standardRadiation.cpp
submodels/thermo/filmRadiationModel/constantRadiation/constantRadiation.cpp
submodels/thermo/filmRadiationModel/primaryRadiation/primaryRadiation.cpp
submodels/thermo/filmViscosityModel/filmViscosityModel/filmViscosityModel.cpp
submodels/thermo/filmViscosityModel/filmViscosityModel/filmViscosityModelNew.cpp
submodels/thermo/filmViscosityModel/constantViscosity/constantViscosity.cpp
submodels/thermo/filmViscosityModel/liquidViscosity/liquidViscosity.cpp
submodels/thermo/filmViscosityModel/thixotropicViscosity/thixotropicViscosity.cpp
submodels/thermo/filmViscosityModel/ArrheniusViscosity/ArrheniusViscosity.cpp
submodels/thermo/filmViscosityModel/DataEntryViscosity/DataEntryViscosity.cpp
submodels/thermo/filmViscosityModel/waxSolventViscosity/waxSolventViscosity.cpp
derivedFvPatchFields/filmHeightInletVelocity/filmHeightInletVelocityFvPatchVectorField.cpp
derivedFvPatchFields/inclinedFilmNusseltHeight/inclinedFilmNusseltHeightFvPatchScalarField.cpp
derivedFvPatchFields/inclinedFilmNusseltInletVelocity/inclinedFilmNusseltInletVelocityFvPatchVectorField.cpp
derivedFvPatchFields/wallFunctions/alphatFilmWF/alphatFilmWFFvPatchScalarField.cpp
derivedFvPatchFields/wallFunctions/mutkFilmWF/mutkFilmWFFvPatchScalarField.cpp
""")

caelus_inc = [
'turbulenceModels',
'thermophysicalModels/basic/lnInclude',
'thermophysicalModels/specie/lnInclude',
'thermophysicalModels/reactionThermo/lnInclude',
'thermophysicalModels/SLGThermo/lnInclude',
'thermophysicalModels/thermophysicalProperties/lnInclude',
'turbulenceModels/compressible/turbulenceModel/lnInclude',
'turbulenceModels/compressible/LES/lnInclude',
'turbulenceModels/compressible/RAS/lnInclude',
'regionModels/regionModel/lnInclude',
'lagrangian/distributionModels/lnInclude'
]

caelus_libs = [
'core',
'fluidThermophysicalModels',
'specie',
'thermophysicalProperties',
'reactionThermophysicalModels',
'SLGThermo',
'distributionModels',
'compressibleTurbulenceModel',
'compressibleRASModels',
'compressibleLESModels',
'regionModels'
]

build_lib(env,
          target=target,
          sources=sources,
          caelus_inc=caelus_inc,
          caelus_libs=caelus_libs)
