# -*- mode: python -*-

from build import build_lib
Import('env')

target = 'autoMesh'

sources = Split("""
autoHexMesh/autoHexMeshDriver/autoLayerDriver.cpp
autoHexMesh/autoHexMeshDriver/autoLayerDriverShrink.cpp
autoHexMesh/autoHexMeshDriver/autoSnapDriver.cpp
autoHexMesh/autoHexMeshDriver/autoSnapDriverFeature.cpp
autoHexMesh/autoHexMeshDriver/autoRefineDriver.cpp
autoHexMesh/autoHexMeshDriver/layerParameters/layerParameters.cpp
autoHexMesh/autoHexMeshDriver/refinementParameters/refinementParameters.cpp
autoHexMesh/autoHexMeshDriver/snapParameters/snapParameters.cpp
autoHexMesh/autoHexMeshDriver/pointData/pointData.cpp
autoHexMesh/meshRefinement/meshRefinementBaffles.cpp
autoHexMesh/meshRefinement/meshRefinement.cpp
autoHexMesh/meshRefinement/meshRefinementMerge.cpp
autoHexMesh/meshRefinement/meshRefinementProblemCells.cpp
autoHexMesh/meshRefinement/meshRefinementRefine.cpp
autoHexMesh/refinementFeatures/refinementFeatures.cpp
autoHexMesh/refinementSurfaces/refinementSurfaces.cpp
autoHexMesh/shellSurfaces/shellSurfaces.cpp
autoHexMesh/trackedParticle/trackedParticle.cpp
autoHexMesh/trackedParticle/trackedParticleCloud.cpp
""")

caelus_inc = [
'dynamicMesh/dynamicMesh/lnInclude',
'lagrangian/basic/lnInclude',
'parallel/decompose/decompositionMethods/lnInclude'
]

caelus_libs = [
'core',
'dynamicMesh',
'lagrangian',
'distributed',
'decompositionMethods'
]

prepend_args = { 'CXXFLAGS' : ['-DCONST_TMP'] }

build_lib(env,
          target=target,
          sources=sources,
          caelus_inc=caelus_inc,
          caelus_libs=caelus_libs,
          prepend_args=prepend_args)
