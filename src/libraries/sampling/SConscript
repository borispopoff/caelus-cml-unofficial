# -*- mode: python -*-

from build import build_lib
Import('env')

target = 'sampling'

sources = Split("""
checkMesh/checkGeometry.cpp
checkMesh/checkTools.cpp
probes/probes.cpp
probes/patchProbes.cpp
probes/probesGrouping.cpp
probes/probesFunctionObject/probesFunctionObject.cpp
sampledSet/circle/circleSet.cpp
sampledSet/cloud/cloudSet.cpp
sampledSet/patchCloud/patchCloudSet.cpp
sampledSet/polyLine/polyLineSet.cpp
sampledSet/face/faceOnlySet.cpp
sampledSet/midPoint/midPointSet.cpp
sampledSet/midPointAndFace/midPointAndFaceSet.cpp
sampledSet/patchSeed/patchSeedSet.cpp
sampledSet/sampledSet/sampledSet.cpp
sampledSet/sampledSets/sampledSets.cpp
sampledSet/sampledSets/sampledSetsGrouping.cpp
sampledSet/sampledSetsFunctionObject/sampledSetsFunctionObject.cpp
sampledSet/triSurfaceMeshPointSet/triSurfaceMeshPointSet.cpp
sampledSet/uniform/uniformSet.cpp
sampledSet/array/arraySet.cpp
cuttingPlane/cuttingPlane.cpp
sampledSurface/sampledPatch/sampledPatch.cpp
sampledSurface/sampledPatchInternalField/sampledPatchInternalField.cpp
sampledSurface/sampledPlane/sampledPlane.cpp
sampledSurface/isoSurface/isoSurface.cpp
sampledSurface/isoSurface/sampledIsoSurface.cpp
sampledSurface/isoSurface/isoSurfaceCell.cpp
sampledSurface/isoSurface/sampledIsoSurfaceCell.cpp
sampledSurface/distanceSurface/distanceSurface.cpp
sampledSurface/sampledCuttingPlane/sampledCuttingPlane.cpp
sampledSurface/sampledSurface/sampledSurface.cpp
sampledSurface/sampledSurfaces/sampledSurfaces.cpp
sampledSurface/sampledSurfaces/sampledSurfacesGrouping.cpp
sampledSurface/sampledSurfacesFunctionObject/sampledSurfacesFunctionObject.cpp
sampledSurface/sampledTriSurfaceMesh/sampledTriSurfaceMesh.cpp
sampledSurface/thresholdCellFaces/thresholdCellFaces.cpp
sampledSurface/thresholdCellFaces/sampledThresholdCellFaces.cpp
sampledSurface/writers/surfaceWriter.cpp
sampledSurface/writers/dx/dxSurfaceWriter.cpp
sampledSurface/writers/ensight/ensightSurfaceWriter.cpp
sampledSurface/writers/ensight/ensightPTraits.cpp
sampledSurface/writers/caelusFile/caelusFileSurfaceWriter.cpp
sampledSurface/writers/nastran/nastranSurfaceWriter.cpp
sampledSurface/writers/proxy/proxySurfaceWriter.cpp
sampledSurface/writers/raw/rawSurfaceWriter.cpp
sampledSurface/writers/starcd/starcdSurfaceWriter.cpp
sampledSurface/writers/vtk/vtkSurfaceWriter.cpp
graphField/writePatchGraph.cpp
graphField/writeCellGraph.cpp
graphField/makeGraph.cpp
meshToMeshInterpolation/meshToMesh/meshToMesh.cpp
meshToMeshInterpolation/meshToMesh/meshToMeshParallelOps.cpp
meshToMeshInterpolation/meshToMesh/calcMethod/meshToMeshMethod/meshToMeshMethod.cpp
meshToMeshInterpolation/meshToMesh/calcMethod/meshToMeshMethod/meshToMeshMethodNew.cpp
meshToMeshInterpolation/meshToMesh/calcMethod/cellVolumeWeight/cellVolumeWeightMethod.cpp
meshToMeshInterpolation/meshToMesh/calcMethod/direct/directMethod.cpp
meshToMeshInterpolation/meshToMesh/calcMethod/mapNearest/mapNearestMethod.cpp
""")

caelus_inc = [
'surfMesh/lnInclude',
'lagrangian/basic/lnInclude',
'conversion/lnInclude',
'dynamicMesh/dynamicMesh/lnInclude'
]

caelus_libs = [
'core',
'surfMesh',
'lagrangian',
'conversion',
'dynamicMesh'

]

build_lib(env,
          target=target,
          sources=sources,
          caelus_inc=caelus_inc,
          caelus_libs=caelus_libs)
