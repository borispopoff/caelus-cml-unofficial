# -*- mode: python -*-

import os
from build import build_lib
Import('env')

target = 'swakLagrangianCloudSourcesFunctionPlugin'

sources = Split("""
LagrangianCloudSourcePluginFunction.cpp
lcsMomentumSourcePluginFunction.cpp
lcsMassFractionPluginFunction.cpp
lcsRhoEffPluginFunction.cpp
lcsVolumeFractionPluginFunction.cpp
lcsScatteringFactorPluginFunction.cpp
lcsEnthalpySourcePluginFunction.cpp
lcsMassSourcePluginFunction.cpp
lcsSpeciesSourcePluginFunction.cpp
""")

caelus_inc = [
'sampling/lnInclude',
'thermophysicalModels/pdfs/lnInclude',
'thermophysicalModels/specie/lnInclude',
'thermophysicalModels/basic/lnInclude',
'thermophysicalModels/reactionThermo/lnInclude',
'thermophysicalModels/radiation/lnInclude',
'thermophysicalModels/SLGThermo/lnInclude',
'thermophysicalModels/thermophysicalProperties/lnInclude',
'regionModels/regionModel/lnInclude',
'regionModels/surfaceFilmModels/lnInclude',
'lagrangian/basic/lnInclude',
'lagrangian/intermediate/lnInclude',
'lagrangian/solidParticle/lnInclude'
]

caelus_libs = [
'core',
'sampling',
'swakParsers',
'lagrangian',
'lagrangianIntermediate',
'thermophysicalProperties',
'solidParticle',
'radiationModels',
'SLGThermo'
]

append_args = {}
append_args = { 'CPPPATH' : [
                  os.path.join(env['SWAK_PATH'],'functionPlugins',
                     'swakLagragianCloudSourcePluginFunction'),
                  os.path.join(env['SWAK_PATH'],'functionPlugins',
                     'swakLagragianCloudSourcePluginFunction/lnInclude'),
                  os.path.join(env['SWAK_PATH'],'swakParsers/lnInclude')
               ]
            }

build_lib(env,
          target=target,
          sources=sources,
          caelus_inc=caelus_inc,
          caelus_libs=caelus_libs,
          append_args=append_args)
