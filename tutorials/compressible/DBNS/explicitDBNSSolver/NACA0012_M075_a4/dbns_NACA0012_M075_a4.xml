<?xml version="1.0" encoding="UTF-8" ?>

<testproblem>
  <name>DBNS NACA0012_M075_a4</name>

  <owner userid="ACCM"/>

  <tags>tut dbns laminar</tags>

  <problem_definition length="medium" nprocs="1">

    <command_line>caelus_tutorials --quiet -f run_tutorial.yaml</command_line>
    <clean_command_line>caelus_tutorials --quiet -f run_tutorial.yaml --clean</clean_command_line>
  </problem_definition>

  <variables>

    <variable name="run_completed" language="python" variable_list="completed">
from caelus.post.logs import SolverLog
clog = SolverLog(logfile="explicitDBNSSolver.log")
completed = clog.solve_completed
    </variable>

    <variable name="ref_time_residuals" language="python" variable_list="exec_time_ref">
import pandas as pd
import os, caelus_test_tools
reference_path = caelus_test_tools.reference_path(project_dir, ref_path)
time = pd.read_table(os.path.join(reference_path,"logs/clock_time.dat"), comment='#', delim_whitespace=True)
ex_time = time[['Time', 'ExecutionTime']]
exec_time_ref = ex_time.iloc[-1][1]
    </variable>

    <variable name="time_residuals" language="python" variable_list="exec_time">
import pandas as pd
time = pd.read_table("logs/clock_time.dat", comment='#', delim_whitespace=True)
ex_time = time[['Time', 'ExecutionTime']]
exec_time = ex_time.iloc[-1][1]
    </variable>

    <variable name="results" language="python" variable_list="p_range,u_range,p_diff_rms,u_diff_rms">
import os, caelus_test_tools
reference_path = caelus_test_tools.reference_path(project_dir, ref_path)
p_range  = caelus_test_tools.compare_scalar_range("0.1/p", os.path.join(reference_path,"0.1/p"), 0.05)
u_range  = caelus_test_tools.compare_vector_norm_range("0.1/U", os.path.join(reference_path,"0.1/U"), 0.05)
p_diff_rms  = caelus_test_tools.compare_field_diff_rms("0.1/p", os.path.join(reference_path,"0.1/p"), 0.05)
u_diff_rms  = caelus_test_tools.compare_field_diff_rms("0.1/U", os.path.join(reference_path,"0.1/U"), 0.05)
    </variable>
  </variables>

  <pass_tests>
    <test name="Completed" language="python">
assert(completed)
    </test>
    <test name="p range" language="python">
assert(p_range)
    </test>
    <test name="U range" language="python">
assert(u_range)
    </test>
    <test name="p field difference RMS" language="python">
assert(p_diff_rms)
    </test>
    <test name="U field difference RMS" language="python">
assert(u_diff_rms)
    </test>
  </pass_tests>

  <warn_tests>
    <test name="Higher execution time" language="python">
assert(exec_time &lt; exec_time_ref)
    </test>
  </warn_tests>

</testproblem>
